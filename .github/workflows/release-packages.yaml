name: Relase to NPM registry

on:
  workflow_call:
    inputs:
      runs-on:
        type: string
        description: "Runner to use"
        default: "ubuntu-latest"
      node-version:
        type: string
        description: "Node version to use"
      bun-version:
        type: string
        description: "Bun version to use"
      before-publish:
        type: string
        description: "Command to run before publishing"
        default: 'echo "No command to run"'
      package-manager:
        type: string
        description: "Package manager to use"
        default: "yarn"
      release-mode:
        type: string
        description: "Changeset release | tag"
        default: publish

    secrets:
      NPM_TOKEN:
        required: true

    outputs:
      published:
        description: "Whether a changeset was published"
        value: ${{ jobs.release.outputs.published }}
      publishedPackages:
        description: "Published packages"
        value: ${{ jobs.release.outputs.publishedPackages }}
      hasChangesets:
        description: "Whether there are changesets"
        value: ${{ jobs.release.outputs.hasChangesets }}
      pullRequestNumber:
        description: "Pull request number"
        value: ${{ jobs.release.outputs.pullRequestNumber }}
      transformPackages:
        description: "Packages to build"
        value: ${{ jobs.release.outputs.transformPackages }}

jobs:
  release:
    name: Versioning and Release
    runs-on: ${{ inputs.runs-on }}

    outputs:
      published: ${{ steps.changesets.outputs.published }}
      publishedPackages: ${{ steps.changesets.outputs.publishedPackages }}
      hasChangesets: ${{ steps.changesets.outputs.hasChangesets }}
      pullRequestNumber: ${{ steps.changesets.outputs.pullRequestNumber }}
      transformPackages: ${{ steps.transform-packages.outputs.packages }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          # related to issue, https://github.com/changesets/action/issues/201
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        if: ${{ inputs.package-manager == 'pnpm' }}
        with:
          version: 8

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        if: ${{ inputs.bun-version }}
        with:
          version: ${{ inputs.bun-version }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        if: ${{ inputs.node-version }}
        with:
          node-version: ${{ inputs.node-version }}
          cache: ${{ inputs.package-manager == 'bun' && '' || inputs.package-manager }}

      - name: Install dependencies
        run: |
          if [ "${{ inputs.package-manager }}" = "yarn" ]; then
            yarn global add @changesets/cli
            yarn install --frozen-lockfile
          elif [ "${{ inputs.package-manager }}" = "npm" ]; then
            npm install -g @changesets/cli
            npm install
          elif [ "${{ inputs.package-manager }}" = "pnpm" ]; then
            pnpm add -g @changesets/cli
            pnpm install --frozen-lockfile
          elif [ "${{ inputs.package-manager }}" = "bun" ]; then
            bun add -g @changesets/cli
            bun i --frozen-lockfile
          fi

      - name: Run before publish
        run: |
          ${{ inputs.before-publish }}

      - name: Create Versioning Pull Request
        id: changesets
        uses: changesets/action@v1.4.2
        with:
          createGithubReleases: true
          version: changeset version
          publish: changeset ${{ inputs.release-mode }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Transform Packages
        id: transform-packages
        run: |
          PACKAGES=$(echo $PACKAGES | jq -c 'map_values({name:.name,ref:"refs/tags/\(.name)@\(.version)"})')
          echo "packages=$PACKAGES" >> $GITHUB_OUTPUT
        env:
          PACKAGES: ${{ steps.changesets.outputs.publishedPackages }}

      - name: Echo Changeset output
        run: |
          echo "Changeset published - ${{ steps.changesets.outputs.published }}"
          echo "Changeset publishedPackages - ${{ steps.changesets.outputs.publishedPackages }}"
          echo "Changeset hasChangesets - ${{ steps.changesets.outputs.hasChangesets }}"
          echo "Changeset pullRequestNumber - ${{ steps.changesets.outputs.pullRequestNumber }}"
          echo "Packages to build - ${{ steps.transform-packages.outputs.packages }}"
